{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"answ",
				"workingRightsAnswerToProfile"
			],
			[
				"prof",
				"workingRightsProfileStruct"
			],
			[
				"gb",
				"gbAuth"
			],
			[
				"locat",
				"locationAuth"
			],
			[
				"upda",
				"updatedAt"
			],
			[
				"off",
				"offersNotification"
			],
			[
				"POSTGR",
				"POSTGRES_PASSWORD"
			],
			[
				"POST",
				"POSTGRES_DB"
			],
			[
				"overflow",
				"overflow-wrap"
			],
			[
				"word-",
				"word-wrap"
			],
			[
				"grid-",
				"grid-gap"
			],
			[
				"grid-template",
				"grid-template-areas"
			],
			[
				"over",
				"overflow-x"
			],
			[
				"grid-te",
				"grid-template-areas"
			],
			[
				"pushus",
				"pushUserWants"
			],
			[
				"push",
				"pushUserOffers"
			],
			[
				"Offers",
				"OffersUpdated"
			],
			[
				"confi",
				"confirmedListingIds"
			],
			[
				"Websock",
				"koaWebsocket"
			],
			[
				"OfferSam",
				"OfferSamplesMessage"
			],
			[
				"sa",
				"sampleMsg"
			],
			[
				"OfferSample",
				"OfferSamplesMessage"
			],
			[
				"OfferSa",
				"OfferStatusSetMessage"
			],
			[
				"offer",
				"offerGroups"
			],
			[
				"userfind",
				"userFindEmail"
			],
			[
				"li",
				"listingIds"
			],
			[
				"bu",
				"bundleCandidates"
			],
			[
				"grid",
				"grid-template-rows"
			],
			[
				"grid-temp",
				"grid-template-areas"
			],
			[
				"border",
				"border-radius"
			],
			[
				"upa",
				"updateWantListings"
			],
			[
				"set",
				"setConfirm"
			],
			[
				"want",
				"wantsState"
			],
			[
				"wan",
				"wantsState"
			],
			[
				"Offer",
				"OfferSetStatus"
			],
			[
				"OfferSet",
				"OfferSetStatusMessage"
			],
			[
				"Erro",
				"ErrorMessage"
			],
			[
				"bund",
				"bundle"
			],
			[
				"no",
				"nowrap"
			],
			[
				"listing",
				"listingIds"
			],
			[
				"list",
				"listingIds"
			],
			[
				"Discog",
				"DiscogsListing"
			],
			[
				"base",
				"baseShipping"
			],
			[
				"Ch",
				"CheckSquare"
			],
			[
				"of",
				"offers"
			],
			[
				"user",
				"userId"
			],
			[
				"shi",
				"speechSynthesis"
			],
			[
				"listingfin",
				"listingFindSeller"
			],
			[
				"crea",
				"createEvents"
			],
			[
				"un",
				"unhandledRejection"
			],
			[
				"unh",
				"unhandledRejection"
			],
			[
				"on",
				"onSuccess"
			],
			[
				"postwan",
				"postWantSearch"
			],
			[
				"Eve",
				"EventEmitter"
			],
			[
				"wna",
				"wantCreate"
			],
			[
				"wa",
				"wantList"
			],
			[
				"d",
				"discogsRelease"
			],
			[
				"margin",
				"margin-bottom"
			],
			[
				"pass",
				"passwordMatch"
			],
			[
				"pa",
				"passwordChange"
			],
			[
				"koa-",
				"koa-passport"
			],
			[
				"cr",
				"createLog"
			],
			[
				"create",
				"createServices"
			],
			[
				"router",
				"authRouter"
			],
			[
				"Loc",
				"LocalStrategy"
			],
			[
				"bun",
				"bundleCandidates"
			],
			[
				"mport",
				"import"
			],
			[
				"Pro",
				"Provider>"
			],
			[
				"men",
				"mentionsAustralia"
			],
			[
				"ship",
				"shipsFrom"
			],
			[
				"find",
				"findMany"
			],
			[
				"wantli",
				"wantlistLatest"
			],
			[
				"listi",
				"listingRmUnlisted"
			],
			[
				"listin",
				"listingsRmUnlisted"
			],
			[
				"Di",
				"DiscogsListing"
			],
			[
				"pop",
				"populateUserListings"
			],
			[
				"dis",
				"discogs"
			],
			[
				"Json",
				"JsonObject"
			],
			[
				"lisi",
				"listings"
			],
			[
				"userget",
				"userGetName"
			],
			[
				"dic",
				"disconnect"
			],
			[
				"r",
				"randomBytesPromise"
			],
			[
				"verti",
				"verticalDate"
			],
			[
				"ms",
				"msgSenderId"
			],
			[
				"isnt",
				"isntThreadCreator"
			],
			[
				"delete",
				"deleteUserAccounts"
			],
			[
				"for",
				"forageList"
			],
			[
				"to",
				"toString"
			],
			[
				"random",
				"randomBytes"
			],
			[
				"notif",
				"notifyFailure"
			],
			[
				"Rec",
				"RecruitmentRequests"
			],
			[
				"Userh",
				"UsersHandler"
			],
			[
				"User",
				"UsersHandler"
			],
			[
				"enrol",
				"enrolments"
			],
			[
				"get",
				"getUser"
			],
			[
				"Userrol",
				"UserRoleConstants"
			],
			[
				"Us",
				"UserRoleConstants"
			],
			[
				"curre",
				"currentUser"
			],
			[
				"Me",
				"Meteor"
			],
			[
				"M",
				"meteorCallPromise"
			],
			[
				"Si",
				"SimpleDDP"
			],
			[
				"di",
				"disconnect"
			],
			[
				"veri",
				"verifiedUser"
			],
			[
				"login",
				"loginWithPassword"
			],
			[
				"sign",
				"signupMethod"
			],
			[
				"me",
				"meteorCallPromise"
			],
			[
				"Mon",
				"MongoMemoryServer"
			],
			[
				"Mono",
				"MongoMemoryServer"
			],
			[
				"smar",
				"smartBorders"
			],
			[
				"defaultout",
				"default_output_device"
			],
			[
				"audio",
				"audio_host"
			],
			[
				"aud",
				"audio_host"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "import twilio from \"npm:twilio\";\n\nconst authToken = Deno.env.get(\"TWILIO_AUTH_TOKEN\");\nconst accountSid = Deno.env.get(\"TWILIO_ACCOUNT_SID\");\nconst messagingServiceSid = Deno.env.get(\"TWILIO_MESSAGING_SID\");\n\nDeno.serve(async (req) => {\n  const { msg, phoneNumber } = await req.json();\n  const client = twilio(accountSid, authToken);\n\n  const res = await client.messages\n    .create({\n      body: msg,\n      messagingServiceSid,\n      to: phoneNumber,\n    });\n\n  console.log(res);\n\n  return new Response(\n    JSON.stringify(res),\n    { headers: { \"Content-Type\": \"application/json\" } },\n  );\n});\n",
			"file": "api/supabase/functions/podowl-sms/index.ts",
			"file_size": 596,
			"file_write_time": 133794310550193466,
			"settings":
			{
				"buffer_size": 596,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					23,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Line.sublime-macro"
					},
					"AQAAAAkBAAAAAAAACQEAAAAAAAA3AAAAaW1wb3J0ICJqc3I6QHN1cGFiYXNlL2Z1bmN0aW9ucy1qcy9lZGdlLXJ1bnRpbWUuZC50cyI7Cg",
					"AQAAAAAAAAABAAAAIQEAAAAAAAAhAQAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					6,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Line.sublime-macro"
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAABTAAAALy8gRm9sbG93IHRoaXMgc2V0dXAgZ3VpZGUgdG8gaW50ZWdyYXRlIHRoZSBEZW5vIGxhbmd1YWdlIHNlcnZlciB3aXRoIHlvdXIgZWRpdG9yOgoAAAAAAAAAAAAAAAAAAAAAQwAAAC8vIGh0dHBzOi8vZGVuby5sYW5kL21hbnVhbC9nZXR0aW5nX3N0YXJ0ZWQvc2V0dXBfeW91cl9lbnZpcm9ubWVudAoAAAAAAAAAAAAAAAAAAAAANQAAAC8vIFRoaXMgZW5hYmxlcyBhdXRvY29tcGxldGUsIGdvIHRvIGRlZmluaXRpb24sIGV0Yy4KAAAAAAAAAAAAAAAAAAAAAAEAAAAKAAAAAAAAAAAAAAAAAAAAAD0AAAAvLyBTZXR1cCB0eXBlIGRlZmluaXRpb25zIGZvciBidWlsdC1pbiBTdXBhYmFzZSBSdW50aW1lIEFQSXMKAAAAAAAAAAAAAAAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "api/src/sms.ts",
			"settings":
			{
				"buffer_size": 592,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					43,
					2,
					"vi_eval",
					{
						"action_args":
						{
						},
						"action_command": "vi_right_delete",
						"motion_args":
						{
						},
						"motion_clip_to_line": false,
						"motion_command": null,
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AgAAABUAAAAAAAAAFQAAAAAAAAABAAAAcBUAAAAAAAAAFQAAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAFQAAAAAAAAAVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					2,
					"vi_eval",
					{
						"action_args":
						{
						},
						"action_command": "vi_right_delete",
						"motion_args":
						{
						},
						"motion_clip_to_line": false,
						"motion_command": null,
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AgAAABQAAAAAAAAAFAAAAAAAAAABAAAAbhQAAAAAAAAAFAAAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "api/deno.json",
			"settings":
			{
				"buffer_size": 155,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					17,
					1,
					"vi_eval",
					{
						"action_args":
						{
							"insert_command": "vi_delete"
						},
						"action_command": "enter_insert_mode",
						"motion_args": null,
						"motion_clip_to_line": false,
						"motion_command": null,
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AQAAACwAAAAAAAAALAAAAAAAAAAHAAAAbWFpbi50cw",
					"AQAAAAAAAAABAAAALAAAAAAAAAAzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "sms"
					},
					"AwAAACwAAAAAAAAALQAAAAAAAAAAAAAALQAAAAAAAAAuAAAAAAAAAAAAAAAuAAAAAAAAAC8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAAAAAAAAAAsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					3,
					"left_delete",
					null,
					"AwAAAC4AAAAAAAAALgAAAAAAAAABAAAAcy0AAAAAAAAALQAAAAAAAAABAAAAbSwAAAAAAAAALAAAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAALwAAAAAAAAAvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "src/sms.ts"
					},
					"CgAAACwAAAAAAAAALQAAAAAAAAAAAAAALQAAAAAAAAAuAAAAAAAAAAAAAAAuAAAAAAAAAC8AAAAAAAAAAAAAAC8AAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAADIAAAAAAAAAAAAAADIAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADUAAAAAAAAAAAAAADUAAAAAAAAANgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAAAAAAAAAAsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							{
								"newText": "",
								"range":
								{
									"end":
									{
										"character": 0,
										"line": 8
									},
									"start":
									{
										"character": 1,
										"line": 7
									}
								}
							}
						],
						"process_placeholders": false,
						"required_view_version": null
					},
					"AQAAAHgAAAAAAAAAeAAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAANgAAAAAAAAA2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB4AAAAewogICJ0YXNrcyI6IHsKICAgICJkZXYiOiAiZGVubyBydW4gLS13YXRjaCBzcmMvc21zLnRzIgogIH0sCiAgImltcG9ydHMiOiB7CiAgICAiQHN0ZC9hc3NlcnQiOiAianNyOkBzdGQvYXNzZXJ0QDEiCiAgfQp9AAAAAAAAAACbAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQAAAAAAAAA1AAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "api/deno.lock",
			"settings":
			{
				"buffer_size": 10482,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					""
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Automatic"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Run"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Run (with args)..."
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Check"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Test"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Test (with args)..."
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Bench"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Clean"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Document"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Clippy"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Script"
				]
			],
			[
				"Packages/Rust Enhanced/RustEnhanced.sublime-build",
				"Run"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"add folder",
				"Project: Add Folder"
			],
			[
				"sideb",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"lsp",
				"LSP: Toggle Log Panel"
			],
			[
				"enable lan",
				"LSP: Enable Language Server in Project"
			],
			[
				"lang",
				"LSP: Enable Language Server in Project"
			],
			[
				"disable",
				"LSP: Disable Language Server in Project"
			],
			[
				"copilot",
				"Preferences: LSP-copilot Settings"
			],
			[
				"enab",
				"Package Control: Enable Package"
			],
			[
				"lsp key",
				"Preferences: LSP Key Bindings"
			],
			[
				"type",
				"Set Syntax: TypeScript"
			],
			[
				"deno",
				"Preferences: LSP-Deno Settings"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pretty",
				"Pretty JSON: Format JSON"
			],
			[
				"ts",
				"Set Syntax: TypeScript"
			],
			[
				"java",
				"Set Syntax: JavaScript"
			],
			[
				"sql",
				"Set Syntax: SQL"
			],
			[
				"yaml",
				"Set Syntax: YAML"
			],
			[
				"reind",
				"Indentation: Reindent Lines"
			],
			[
				"rein",
				"Indentation: Reindent Lines"
			],
			[
				"jsx",
				"Set Syntax: JSX"
			],
			[
				"log",
				"Git: Log Current File"
			],
			[
				"diff",
				"Git: Diff Current File"
			],
			[
				"pris",
				"Set Syntax: Prisma"
			],
			[
				"blame",
				"Git: Blame"
			],
			[
				"ja",
				"Set Syntax: JavaScript"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"format",
				"ESLint Formatter: Format this file"
			],
			[
				"eslint",
				"Preferences: SublimeLinter Settings"
			],
			[
				"blam",
				"Git: Blame"
			],
			[
				"git diff",
				"Git: Diff Current File"
			],
			[
				"git show",
				"Git: Show Commit By Hash"
			],
			[
				"ngin",
				"Set Syntax: nginx"
			],
			[
				"git log",
				"Git: Log Current File"
			],
			[
				"dockerfil",
				"Set Syntax: Dockerfile"
			],
			[
				"syn bash",
				"Set Syntax: Bourne Again Shell (bash)"
			],
			[
				"change",
				"Changelog"
			],
			[
				"ui",
				"UI: Select Color Scheme"
			],
			[
				"synt rust",
				"Set Syntax: Rust Enhanced"
			],
			[
				"toml",
				"Set Syntax: TOML"
			],
			[
				"lsp ena",
				"LSP: Enable Language Server in Project"
			],
			[
				"color",
				"UI: Select Color Scheme"
			],
			[
				"theme",
				"UI: Select Color Scheme"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 955.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/ntr/code/podowl",
		"/home/ntr/code/podowl/api",
		"/home/ntr/code/podowl/api/src"
	],
	"file_history":
	[
		"/home/ntr/code/podowl/podowl.sublime-project",
		"/home/ntr/code/podowl/api/supabase/functions/podowl-sms/index.ts",
		"/home/ntr/code/podowl/api/deno.json",
		"/home/ntr/code/podowl/api/supabase/functions/podowl-sms/source.ts",
		"/home/ntr/mcrates/api/src/pg.ts",
		"/home/ntr/mcrates/api/src/discogs.ts",
		"/home/ntr/mcrates/docker-compose.K8S.yaml",
		"/home/ntr/mcrates/api/package.json",
		"/home/ntr/mcrates/api/src/services.ts",
		"/home/ntr/mcrates/api/prisma/schema.prisma",
		"/home/ntr/mcrates/api/src/events.ts",
		"/home/ntr/mcrates/.env",
		"/home/ntr/mcrates/api/.env",
		"/home/ntr/mcrates/docker-compose.yaml",
		"/home/ntr/mcrates/api/api.Dockerfile",
		"/home/ntr/mcrates/client/src/app.tsx",
		"/home/ntr/mcrates/client/src/components/offer.tsx",
		"/home/ntr/mcrates/client/src/routes/main.tsx",
		"/home/ntr/.config/redshift.conf",
		"/home/ntr/mcrates/docker-compose.MCRATES.yaml",
		"/home/ntr/mcrates/client/client.nginx.conf",
		"/home/ntr/mcrates/api/src/api.ts",
		"/home/ntr/mcrates/client/src/routes/search.tsx",
		"/home/ntr/Downloads/git.mnml.gg-zone.txt",
		"/home/ntr/Downloads/mnml.gg-zone.txt",
		"/home/ntr/mcrates/api/src/discord.ts",
		"/home/ntr/mcrates/client/client.Dockerfile",
		"/home/ntr/mcrates/nginx/matescrates.au.nginx.conf",
		"/home/ntr/mcrates/client/src/http.ts",
		"/home/ntr/mcrates/.gitignore",
		"/home/ntr/mcrates/api/src/routers/router.auth.ts",
		"/home/ntr/mcrates/api/tsconfig.json",
		"/home/ntr/mcrates/api/src/log.ts",
		"/home/ntr/mcrates/api/src/rpc.ts",
		"/home/ntr/mcrates/client/.eslintrc.js",
		"/home/ntr/Dropbox/.sketch/yep.txt",
		"/home/ntr/stable-diffusion-webui/extensions/Umi-AI/wildcards/Landscapes.txt",
		"/home/ntr/code/dbased/docker-compose.yml",
		"/home/ntr/etc/surf.txt",
		"/home/ntr/Dropbox/etc/surf.txt",
		"/home/ntr/Downloads/appointment.ics",
		"/home/ntr/mcrates/client/tsconfig.json",
		"/home/ntr/mcrates/client/src/routes/info.tsx",
		"/home/ntr/mcrates/api/.mocharc.json",
		"/home/ntr/mcrates/client/src/style/index.less",
		"/home/ntr/mcrates/client/src/style/styles.less",
		"/home/ntr/Dropbox/.sketch/sd.txt",
		"/home/ntr/.xmonad/xmonad.hs",
		"/home/ntr/mcrates/api/src/api.test.ts",
		"/home/ntr/forage/JIRA.csv",
		"/home/ntr/mcrates/api/prisma/migrations/20221226110634_initial_migration/migration.sql",
		"/home/ntr/mcrates/api/index.ts",
		"/home/ntr/mcrates/api/src/offers.ts",
		"/home/ntr/mcrates/TODO.md",
		"/home/ntr/mcrates/client/src/toast.tsx",
		"/home/ntr/mcrates/client/src/ws.ts",
		"/home/ntr/mcrates/api/src/utils.ts",
		"/home/ntr/mcrates/api/src/mocha.setup.ts",
		"/home/ntr/.ssh/config",
		"/home/ntr/mcrates/client/src/style/fonts.less",
		"/home/ntr/mcrates/client/src/routes/acp.tsx",
		"/home/ntr/mcrates/client/package.json",
		"/home/ntr/mcrates/client/src/components/offer.group.tsx",
		"/home/ntr/Downloads/bulk-add-Interns (6) (2).csv",
		"/home/ntr/mcrates/client/src/components/nav.tsx",
		"/home/ntr/mcrates/client/src/routes/list.tsx",
		"/home/ntr/mcrates/client/src/components/want.tsx",
		"/home/ntr/mcrates/api/src/notify.ts",
		"/home/ntr/mcrates/client/src/routes/offers.tsx",
		"/home/ntr/mcrates/api/src/listen.notify.ts",
		"/home/ntr/mcrates/api/prisma/migrations/20221226113955_notify/migration.sql",
		"/home/ntr/mcrates/client/src/actions.ts",
		"/home/ntr/mcrates/client/src/routes/login.tsx",
		"/home/ntr/mcrates/client/src/index.ts",
		"/home/ntr/mcrates/client/src/template.html",
		"/home/ntr/Downloads/bulk-add-Interns (1).csv",
		"/home/ntr/mcrates/api/global.d.ts",
		"/home/ntr/Dropbox/business/tfn-abn-super.txt",
		"/home/ntr/mcrates/client/src/components/swirl.tsx",
		"/home/ntr/.aliases",
		"/home/ntr/mcrates/client/src/store.tsx",
		"/home/ntr/mcrates/client/src/assets/swirl.bare.svg",
		"/home/ntr/mcrates/client/src/assets/swirl.svg",
		"/home/ntr/mcrates/client/src/components/header.tsx",
		"/home/ntr/mcrates/client/src/routes/home.tsx",
		"/home/ntr/mcrates/nginx/localhost.nginx.conf",
		"/home/ntr/mcrates/docker-compose.TEST.yaml",
		"/home/ntr/mcrates/etc/matescrates.au.nginx.conf",
		"/home/ntr/mcrates/client/src/routes/bundles.tsx",
		"/home/ntr/mcrates/client/src/components/bundle.tsx",
		"/home/ntr/mcrates/client/src/components/acp.offer.tsx",
		"/home/ntr/mcrates/api/node_modules/.prisma/client/index.d.ts",
		"/home/ntr/mcrates/client/disclaimers.txt",
		"/home/ntr/mcrates/client/src/routes/register.tsx",
		"/home/ntr/mcrates/api/src/auth.passport.ts",
		"/home/ntr/mcrates/api/docker-compose.yaml",
		"/home/ntr/mcrates/docker-compose.test.yaml",
		"/home/ntr/mcrates/server/prisma/schema.prisma",
		"/home/ntr/mcrates/server/src/api.test.ts",
		"/home/ntr/mcrates/server/docker-compose.test.yaml",
		"/home/ntr/mcrates/server/src/api.ts",
		"/home/ntr/mcrates/server/src/routers/router.auth.ts",
		"/home/ntr/mcrates/server/src/pg.ts",
		"/home/ntr/mcrates/server/src/discogs.ts",
		"/home/ntr/mcrates/server/docker-compose.yaml",
		"/home/ntr/mcrates/server/.env",
		"/home/ntr/mcrates/server/package.json",
		"/home/ntr/mcrates/server/.mocharc.json",
		"/home/ntr/mcrates/server/index.ts",
		"/home/ntr/mcrates/server/src/log.ts",
		"/home/ntr/mcrates/server/src/services.ts",
		"/home/ntr/mcrates/server/tsconfig.json",
		"/home/ntr/mcrates/server/src/auth.passport.ts",
		"/home/ntr/mcrates/server/node_modules/passport/lib/middleware/initialize.js",
		"/home/ntr/mcrates/client/.mocharc.json",
		"/home/ntr/mcrates/server/global.d.ts",
		"/home/ntr/mcrates/client/src/routes/user.tsx",
		"/home/ntr/mcrates/server/node_modules/.prisma/client/index.d.ts",
		"/home/ntr/mcrates/client/src/routes/profile.tsx",
		"/home/ntr/mcrates/client/src/components/app.tsx",
		"/home/ntr/mcrates/client/src/components/header/index.tsx",
		"/home/ntr/mcrates/client/src/routes/profile/profile.tsx",
		"/home/ntr/mcrates/client/src/routes/home/index.tsx",
		"/home/ntr/mcrates/client/src/routes/profile/index.tsx",
		"/home/ntr/mcrates/client/src/components/header/style.less",
		"/home/ntr/mcrates/client/src/routes/home/style.less",
		"/home/ntr/mcrates/client/src/routes/profile/style.less",
		"/home/ntr/mcrates/client/README.md"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 152.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"twilio"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "api/supabase/functions/podowl-sms/index.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 596,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								596
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".\"'`/@<#",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "Deno"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///home/ntr/code/podowl/api/supabase/functions/podowl-sms/index.ts",
							"show_definitions": false,
							"syntax": "Packages/JavaScript/TypeScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "api/src/sms.ts",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 592,
						"regions":
						{
						},
						"selection":
						[
							[
								454,
								454
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".\"'`/@<#",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "Deno"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///home/ntr/code/podowl/api/src/sms.ts",
							"show_definitions": false,
							"syntax": "Packages/JavaScript/TypeScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "api/deno.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 155,
						"regions":
						{
						},
						"selection":
						[
							[
								155,
								155
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"selector": "- comment - punctuation.separator - punctuation.definition.string.end - constant.character.escape - invalid.illegal - punctuation.section.mapping - punctuation.section.sequence",
									"server": "LSP-json"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///home/ntr/code/podowl/api/deno.json",
							"show_definitions": false,
							"syntax": "Packages/JSON/JSON.sublime-syntax",
							"tab_size": 2
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "api/deno.lock",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 10482,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"lsp_uri": "file:///home/ntr/code/podowl/api/deno.lock",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 41.0
	},
	"input":
	{
		"height": 68.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.LSP Log Panel":
	{
		"height": 1048.0
	},
	"output.SublimeLinter":
	{
		"height": 186.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 522.0
	},
	"output.diagnostics":
	{
		"height": 388.0
	},
	"output.doc":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 1167.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 186.0
	},
	"output.language servers":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "podowl.sublime-project",
	"replace":
	{
		"height": 78.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"inde",
				"api/supabase/functions/podowl-sms/index.ts"
			],
			[
				"index",
				"api/supabase/functions/podowl-sms/index.ts"
			],
			[
				"deno",
				"api/deno.json"
			],
			[
				"index.t",
				"api/supabase/functions/podowl-sms/index.ts"
			],
			[
				"prism",
				"api/prisma/schema.prisma"
			],
			[
				"servic",
				"api/src/services.ts"
			],
			[
				"pg",
				"api/src/pg.ts"
			],
			[
				".env",
				".env"
			],
			[
				"di",
				"api/src/discogs.ts"
			],
			[
				"offer",
				"client/src/components/offer.tsx"
			],
			[
				"app",
				"client/src/app.tsx"
			],
			[
				"compose",
				"docker-compose.yaml"
			],
			[
				"disco",
				"api/src/discogs.ts"
			],
			[
				".en",
				".env"
			],
			[
				"pack",
				"api/package.json"
			],
			[
				"dockerfile",
				"api/api.Dockerfile"
			],
			[
				"event",
				"api/src/events.ts"
			],
			[
				"schem",
				"api/prisma/schema.prisma"
			],
			[
				"dis",
				"api/src/discogs.ts"
			],
			[
				"serv",
				"api/src/services.ts"
			],
			[
				"sche",
				"api/prisma/schema.prisma"
			],
			[
				"package",
				"api/package.json"
			],
			[
				"compo",
				"docker-compose.yaml"
			],
			[
				"client.ngin",
				"client/client.nginx.conf"
			],
			[
				"events",
				"api/src/events.ts"
			],
			[
				"nginx",
				"nginx/matescrates.au.nginx.conf"
			],
			[
				"api.te",
				"api/src/api.test.ts"
			],
			[
				"api.t",
				"api/src/api.ts"
			],
			[
				"api",
				"api/src/api.ts"
			],
			[
				"docker",
				"api/api.Dockerfile"
			],
			[
				"ngin",
				"client/client.nginx.conf"
			],
			[
				"router",
				"api/src/routers/router.auth.ts"
			],
			[
				"http",
				"client/src/http.ts"
			],
			[
				"packa",
				"api/package.json"
			],
			[
				"k8s",
				"docker-compose.K8S.yaml"
			],
			[
				"com",
				"docker-compose.MCRATES.yaml"
			],
			[
				"mc",
				"docker-compose.MCRATES.yaml"
			],
			[
				"client.doc",
				"client/client.Dockerfile"
			],
			[
				"mcr",
				"docker-compose.MCRATES.yaml"
			],
			[
				"eslint",
				"client/.eslintrc.js"
			],
			[
				"log",
				"api/src/log.ts"
			],
			[
				"tsconfig",
				"api/tsconfig.json"
			],
			[
				"tsc",
				"api/tsconfig.json"
			],
			[
				"rpc",
				"api/src/rpc.ts"
			],
			[
				"gi",
				".gitignore"
			],
			[
				"tscon",
				"api/tsconfig.json"
			],
			[
				"style",
				"client/src/style/styles.less"
			],
			[
				"json",
				"api/.mocharc.json"
			],
			[
				"ser",
				"api/src/services.ts"
			],
			[
				"apite",
				"api/src/api.test.ts"
			],
			[
				"auth",
				"api/src/routers/router.auth.ts"
			],
			[
				"sql",
				"api/prisma/migrations/20221226110634_initial_migration/migration.sql"
			],
			[
				"eve",
				"api/src/events.ts"
			],
			[
				"discogs",
				"api/src/discogs.ts"
			],
			[
				"discog",
				"api/src/discogs.ts"
			],
			[
				"even",
				"api/src/events.ts"
			],
			[
				"env",
				".env"
			],
			[
				"info",
				"client/src/routes/info.tsx"
			],
			[
				"rout",
				"api/src/routers/router.auth.ts"
			],
			[
				"d",
				"docker-compose.yaml"
			],
			[
				".e",
				".env"
			],
			[
				"ind",
				"api/index.ts"
			],
			[
				"disc",
				"api/src/discord.ts"
			],
			[
				"todo",
				"TODO.md"
			],
			[
				"toast",
				"client/src/toast.tsx"
			],
			[
				"ws",
				"client/src/ws.ts"
			],
			[
				"utils",
				"api/src/utils.ts"
			],
			[
				"index.le",
				"client/src/style/index.less"
			],
			[
				"sty",
				"client/src/style/styles.less"
			],
			[
				"search",
				"client/src/routes/search.tsx"
			],
			[
				"mocha",
				"api/src/mocha.setup.ts"
			],
			[
				"test",
				"api/src/api.test.ts"
			],
			[
				".gi",
				".gitignore"
			],
			[
				"st",
				"client/src/style/styles.less"
			],
			[
				"comp",
				"docker-compose.yaml"
			],
			[
				"acp",
				"client/src/routes/acp.tsx"
			],
			[
				"font",
				"client/src/style/fonts.less"
			],
			[
				"styl",
				"client/src/style/index.less"
			],
			[
				"clientpack",
				"client/package.json"
			],
			[
				"offergrou",
				"client/src/components/offer.group.tsx"
			],
			[
				"servi",
				"api/src/services.ts"
			],
			[
				"nav",
				"client/src/components/nav.tsx"
			],
			[
				"main",
				"client/src/routes/main.tsx"
			],
			[
				"want",
				"client/src/components/want.tsx"
			],
			[
				"list",
				"client/src/routes/list.tsx"
			],
			[
				"index.l",
				"client/src/style/index.less"
			],
			[
				"styles",
				"client/src/style/styles.less"
			],
			[
				"offerg",
				"client/src/components/offer.group.tsx"
			],
			[
				"offers",
				"client/src/routes/offers.tsx"
			],
			[
				"off",
				"api/src/offers.ts"
			],
			[
				"index.ls",
				"client/src/style/index.less"
			],
			[
				"no",
				"api/src/notify.ts"
			],
			[
				"toas",
				"client/src/toast.tsx"
			],
			[
				"noti",
				"api/src/notify.ts"
			],
			[
				"nofi",
				"api/src/notify.ts"
			],
			[
				"notifymi",
				"api/prisma/migrations/20221226113955_notify/migration.sql"
			],
			[
				"listen",
				"api/src/listen.notify.ts"
			],
			[
				"ap",
				"api/src/api.ts"
			],
			[
				"service",
				"api/src/services.ts"
			],
			[
				"pri",
				"api/prisma/schema.prisma"
			],
			[
				"offergroup",
				"client/src/components/offer.group.tsx"
			],
			[
				"scha",
				"api/prisma/schema.prisma"
			],
			[
				"temp",
				"client/src/template.html"
			],
			[
				"login",
				"client/src/routes/login.tsx"
			],
			[
				"sch",
				"api/prisma/schema.prisma"
			],
			[
				"ev",
				"api/src/events.ts"
			],
			[
				"pris",
				"api/prisma/schema.prisma"
			],
			[
				"of",
				"api/src/offers.ts"
			],
			[
				"htt",
				"client/src/http.ts"
			],
			[
				"sear",
				"client/src/routes/search.tsx"
			],
			[
				"offegro",
				"client/src/components/offer.group.tsx"
			],
			[
				"swi",
				"~/mcrates/client/src/assets/swirl.bare.svg"
			],
			[
				"less",
				"client/src/style/index.less"
			],
			[
				"in",
				"client/src/style/index.less"
			],
			[
				"store",
				"client/src/store.tsx"
			],
			[
				"offe",
				"client/src/components/offer.tsx"
			],
			[
				"logi",
				"client/src/routes/login.tsx"
			],
			[
				"hea",
				"client/src/components/header.tsx"
			],
			[
				"sea",
				"client/src/routes/search.tsx"
			],
			[
				"head",
				"client/src/components/header.tsx"
			],
			[
				"he",
				"client/src/components/header.tsx"
			],
			[
				"home",
				"client/src/routes/home.tsx"
			],
			[
				"ut",
				"api/src/utils.ts"
			],
			[
				"p",
				"api/src/pg.ts"
			],
			[
				"tod",
				"TODO.md"
			],
			[
				"do",
				"docker-compose.yaml"
			],
			[
				"eslin",
				"client/.eslintrc.js"
			],
			[
				"action",
				"client/src/actions.tsx"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 496.0,
		"last_filter": "pod",
		"selected_items":
		[
			[
				"pod",
				"~/code/podowl/podowl.sublime-project"
			],
			[
				"stri",
				"~/code/sl-projects/strix.sublime-project"
			],
			[
				"mem",
				"~/memestream/memestream.sublime-project"
			],
			[
				"strix",
				"~/code/sl-projects/strix.sublime-project"
			],
			[
				"meme",
				"~/memestream/memestream.sublime-project"
			],
			[
				"",
				"~/code/sl-projects/forage.sublime-project"
			],
			[
				"sear",
				"~/code/sl-projects/search.sublime-project"
			],
			[
				"mn",
				"~/code/sl-projects/mnml.sublime-project"
			],
			[
				"mnm",
				"~/code/sl-projects/mnml.sublime-project"
			],
			[
				"j",
				"~/code/sl-projects/forage.sublime-project"
			],
			[
				"mbn",
				"~/code/sl-projects/mnml.sublime-project"
			],
			[
				"m",
				"~/code/sl-projects/mnml.sublime-project"
			],
			[
				"sy",
				"~/code/sl-projects/synth.sublime-project"
			],
			[
				"syn",
				"~/code/sl-projects/synth.sublime-project"
			]
		],
		"width": 376.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"lsp_show_inlay_hints": false
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 324.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
