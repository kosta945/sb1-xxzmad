{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"answ",
				"workingRightsAnswerToProfile"
			],
			[
				"prof",
				"workingRightsProfileStruct"
			],
			[
				"gb",
				"gbAuth"
			],
			[
				"locat",
				"locationAuth"
			],
			[
				"upda",
				"updatedAt"
			],
			[
				"off",
				"offersNotification"
			],
			[
				"POSTGR",
				"POSTGRES_PASSWORD"
			],
			[
				"POST",
				"POSTGRES_DB"
			],
			[
				"overflow",
				"overflow-wrap"
			],
			[
				"word-",
				"word-wrap"
			],
			[
				"grid-",
				"grid-gap"
			],
			[
				"grid-template",
				"grid-template-areas"
			],
			[
				"over",
				"overflow-x"
			],
			[
				"grid-te",
				"grid-template-areas"
			],
			[
				"pushus",
				"pushUserWants"
			],
			[
				"push",
				"pushUserOffers"
			],
			[
				"Offers",
				"OffersUpdated"
			],
			[
				"confi",
				"confirmedListingIds"
			],
			[
				"Websock",
				"koaWebsocket"
			],
			[
				"OfferSam",
				"OfferSamplesMessage"
			],
			[
				"sa",
				"sampleMsg"
			],
			[
				"OfferSample",
				"OfferSamplesMessage"
			],
			[
				"OfferSa",
				"OfferStatusSetMessage"
			],
			[
				"offer",
				"offerGroups"
			],
			[
				"userfind",
				"userFindEmail"
			],
			[
				"li",
				"listingIds"
			],
			[
				"bu",
				"bundleCandidates"
			],
			[
				"grid",
				"grid-template-rows"
			],
			[
				"grid-temp",
				"grid-template-areas"
			],
			[
				"border",
				"border-radius"
			],
			[
				"upa",
				"updateWantListings"
			],
			[
				"set",
				"setConfirm"
			],
			[
				"want",
				"wantsState"
			],
			[
				"wan",
				"wantsState"
			],
			[
				"Offer",
				"OfferSetStatus"
			],
			[
				"OfferSet",
				"OfferSetStatusMessage"
			],
			[
				"Erro",
				"ErrorMessage"
			],
			[
				"bund",
				"bundle"
			],
			[
				"no",
				"nowrap"
			],
			[
				"listing",
				"listingIds"
			],
			[
				"list",
				"listingIds"
			],
			[
				"Discog",
				"DiscogsListing"
			],
			[
				"base",
				"baseShipping"
			],
			[
				"Ch",
				"CheckSquare"
			],
			[
				"of",
				"offers"
			],
			[
				"user",
				"userId"
			],
			[
				"shi",
				"speechSynthesis"
			],
			[
				"listingfin",
				"listingFindSeller"
			],
			[
				"crea",
				"createEvents"
			],
			[
				"un",
				"unhandledRejection"
			],
			[
				"unh",
				"unhandledRejection"
			],
			[
				"on",
				"onSuccess"
			],
			[
				"postwan",
				"postWantSearch"
			],
			[
				"Eve",
				"EventEmitter"
			],
			[
				"wna",
				"wantCreate"
			],
			[
				"wa",
				"wantList"
			],
			[
				"d",
				"discogsRelease"
			],
			[
				"margin",
				"margin-bottom"
			],
			[
				"pass",
				"passwordMatch"
			],
			[
				"pa",
				"passwordChange"
			],
			[
				"koa-",
				"koa-passport"
			],
			[
				"cr",
				"createLog"
			],
			[
				"create",
				"createServices"
			],
			[
				"router",
				"authRouter"
			],
			[
				"Loc",
				"LocalStrategy"
			],
			[
				"bun",
				"bundleCandidates"
			],
			[
				"mport",
				"import"
			],
			[
				"Pro",
				"Provider>"
			],
			[
				"men",
				"mentionsAustralia"
			],
			[
				"ship",
				"shipsFrom"
			],
			[
				"find",
				"findMany"
			],
			[
				"wantli",
				"wantlistLatest"
			],
			[
				"listi",
				"listingRmUnlisted"
			],
			[
				"listin",
				"listingsRmUnlisted"
			],
			[
				"Di",
				"DiscogsListing"
			],
			[
				"pop",
				"populateUserListings"
			],
			[
				"dis",
				"discogs"
			],
			[
				"Json",
				"JsonObject"
			],
			[
				"lisi",
				"listings"
			],
			[
				"userget",
				"userGetName"
			],
			[
				"dic",
				"disconnect"
			],
			[
				"r",
				"randomBytesPromise"
			],
			[
				"verti",
				"verticalDate"
			],
			[
				"ms",
				"msgSenderId"
			],
			[
				"isnt",
				"isntThreadCreator"
			],
			[
				"delete",
				"deleteUserAccounts"
			],
			[
				"for",
				"forageList"
			],
			[
				"to",
				"toString"
			],
			[
				"random",
				"randomBytes"
			],
			[
				"notif",
				"notifyFailure"
			],
			[
				"Rec",
				"RecruitmentRequests"
			],
			[
				"Userh",
				"UsersHandler"
			],
			[
				"User",
				"UsersHandler"
			],
			[
				"enrol",
				"enrolments"
			],
			[
				"get",
				"getUser"
			],
			[
				"Userrol",
				"UserRoleConstants"
			],
			[
				"Us",
				"UserRoleConstants"
			],
			[
				"curre",
				"currentUser"
			],
			[
				"Me",
				"Meteor"
			],
			[
				"M",
				"meteorCallPromise"
			],
			[
				"Si",
				"SimpleDDP"
			],
			[
				"di",
				"disconnect"
			],
			[
				"veri",
				"verifiedUser"
			],
			[
				"login",
				"loginWithPassword"
			],
			[
				"sign",
				"signupMethod"
			],
			[
				"me",
				"meteorCallPromise"
			],
			[
				"Mon",
				"MongoMemoryServer"
			],
			[
				"Mono",
				"MongoMemoryServer"
			],
			[
				"smar",
				"smartBorders"
			],
			[
				"defaultout",
				"default_output_device"
			],
			[
				"audio",
				"audio_host"
			],
			[
				"aud",
				"audio_host"
			]
		]
	},
	"buffers":
	[
		{
			"file": "client/src/components/ContactDetailsForm.tsx",
			"settings":
			{
				"buffer_size": 4833,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					15,
					1,
					"replace_all",
					{
						"close_panel": true
					},
					"AwAAANMNAAAAAAAA4A0AAAAAAAAGAAAAdmFsdWU9SQwAAAAAAABWDAAAAAAAAAYAAAB2YWx1ZT3jCQAAAAAAAPAJAAAAAAAABgAAAHZhbHVlPQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADoCQAAAAAAAOgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					181,
					1,
					"vi_eval",
					{
						"action_args":
						{
						},
						"action_command": "vi_right_delete",
						"motion_args":
						{
						},
						"motion_clip_to_line": false,
						"motion_command": null,
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AQAAAOkAAAAAAAAA6QAAAAAAAAABAAAAPw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpAAAAAAAAAOkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					185,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Line.sublime-macro"
					},
					"AQAAAFwDAAAAAAAAXAMAAAAAAAATAAAAICAgIGlmIChqb2JEYXRhKSB7Cg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABlAwAAAAAAAGUDAAAAAAAAAAAAAACAX0A"
				],
				[
					189,
					1,
					"unindent",
					null,
					"CQAAAFwDAAAAAAAAXAMAAAAAAAACAAAAICCcAwAAAAAAAJwDAAAAAAAAAgAAACAgxwMAAAAAAADHAwAAAAAAAAIAAAAgIOUDAAAAAAAA5QMAAAAAAAACAAAAICD6AwAAAAAAAPoDAAAAAAAAAgAAACAgEQQAAAAAAAARBAAAAAAAAAIAAAAgICAEAAAAAAAAIAQAAAAAAAACAAAAICAoBAAAAAAAACgEAAAAAAAAAgAAACAgYAQAAAAAAABgBAAAAAAAAAIAAAAgIA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcAwAAAAAAAHYEAAAAAAAAAAAAAAAAAAA"
				],
				[
					191,
					2,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Line.sublime-macro"
					},
					"AgAAAGAEAAAAAAAAYAQAAAAAAAAEAAAAICB9CmAEAAAAAAAAYAQAAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjBAAAAAAAAGMEAAAAAAAAAAAAAAAA8L8"
				],
				[
					207,
					1,
					"vi_eval",
					{
						"action_args":
						{
							"insert_command": "vi_delete"
						},
						"action_command": "enter_insert_mode",
						"motion_args": null,
						"motion_clip_to_line": false,
						"motion_command": null,
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AQAAACwEAAAAAAAALAQAAAAAAAALAAAAY29uc29sZS5sb2c",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsBAAAAAAAADcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": "alert"
					},
					"BQAAACwEAAAAAAAALQQAAAAAAAAAAAAALQQAAAAAAAAuBAAAAAAAAAAAAAAuBAAAAAAAAC8EAAAAAAAAAAAAAC8EAAAAAAAAMAQAAAAAAAAAAAAAMAQAAAAAAAAxBAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsBAAAAAAAACwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					222,
					1,
					"replace_character",
					{
						"character": "`"
					},
					"AQAAADIEAAAAAAAAMwQAAAAAAAABAAAAIg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyBAAAAAAAADIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					225,
					4,
					"vi_eval",
					{
						"action_args":
						{
						},
						"action_command": "vi_right_delete",
						"motion_args":
						{
						},
						"motion_clip_to_line": false,
						"motion_command": null,
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"BAAAAEkEAAAAAAAASQQAAAAAAAABAAAAOkkEAAAAAAAASQQAAAAAAAABAAAAIkkEAAAAAAAASQQAAAAAAAABAAAALEkEAAAAAAAASQQAAAAAAAABAAAAIA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJBAAAAAAAAEkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					228,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"insert",
								{
									"characters": " $"
								}
							],
							[
								"insert_snippet",
								{
									"contents": "{$0}"
								}
							],
							[
								"exit_insert_mode",
								null
							]
						]
					},
					"AwAAAEkEAAAAAAAASgQAAAAAAAAAAAAASgQAAAAAAABLBAAAAAAAAAAAAABLBAAAAAAAAE0EAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJBAAAAAAAAEkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					229,
					2,
					"vi_eval",
					{
						"action_args":
						{
						},
						"action_command": "vi_right_delete",
						"motion_args":
						{
						},
						"motion_clip_to_line": false,
						"motion_command": null,
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AgAAAEsEAAAAAAAASwQAAAAAAAABAAAAe0sEAAAAAAAASwQAAAAAAAABAAAAfQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLBAAAAAAAAEsEAAAAAAAAAAAAAAAA8L8"
				],
				[
					231,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"insert_snippet",
								{
									"contents": "{$0}"
								}
							],
							[
								"exit_insert_mode",
								null
							]
						]
					},
					"AQAAAEsEAAAAAAAATQQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLBAAAAAAAAEsEAAAAAAAAAAAAAAAA8L8"
				],
				[
					233,
					1,
					"vi_eval",
					{
						"action_args":
						{
						},
						"action_command": "vi_right_delete",
						"motion_args":
						{
						},
						"motion_clip_to_line": false,
						"motion_command": null,
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AQAAAEwEAAAAAAAATAQAAAAAAAABAAAAfQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMBAAAAAAAAEwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": "}`"
					},
					"AgAAAFYEAAAAAAAAVwQAAAAAAAAAAAAAVwQAAAAAAABYBAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABWBAAAAAAAAFYEAAAAAAAAAAAAAAAA8L8"
				],
				[
					266,
					1,
					"replace_character",
					{
						"character": "4"
					},
					"AQAAAMANAAAAAAAAyw0AAAAAAAALAAAANjE0MzMwMzQwMDQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADADQAAAAAAAMsNAAAAAAAAAAAAAAAA8L8"
				],
				[
					278,
					1,
					"vi_eval",
					{
						"action_args":
						{
							"insert_command": "vi_delete"
						},
						"action_command": "enter_insert_mode",
						"motion_args": null,
						"motion_clip_to_line": false,
						"motion_command": null,
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AQAAAMUJAAAAAAAAxQkAAAAAAAANAAAAc3RyaXguc3lzdGVtcw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFCQAAAAAAANIJAAAAAAAAAAAAAAAA8L8"
				],
				[
					279,
					1,
					"insert",
					{
						"characters": "podowl."
					},
					"BwAAAMUJAAAAAAAAxgkAAAAAAAAAAAAAxgkAAAAAAADHCQAAAAAAAAAAAADHCQAAAAAAAMgJAAAAAAAAAAAAAMgJAAAAAAAAyQkAAAAAAAAAAAAAyQkAAAAAAADKCQAAAAAAAAAAAADKCQAAAAAAAMsJAAAAAAAAAAAAAMsJAAAAAAAAzAkAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFCQAAAAAAAMUJAAAAAAAAAAAAAAAA8L8"
				],
				[
					280,
					1,
					"insert",
					{
						"characters": "com.au"
					},
					"BgAAAMwJAAAAAAAAzQkAAAAAAAAAAAAAzQkAAAAAAADOCQAAAAAAAAAAAADOCQAAAAAAAM8JAAAAAAAAAAAAAM8JAAAAAAAA0AkAAAAAAAAAAAAA0AkAAAAAAADRCQAAAAAAAAAAAADRCQAAAAAAANIJAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMCQAAAAAAAMwJAAAAAAAAAAAAAAAA8L8"
				],
				[
					294,
					1,
					"revert",
					null,
					"BgAAAAAAAAAAAAAAAAAAAAAAAADhEgAAaW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgQXJyb3dMZWZ0IH0gZnJvbSAibHVjaWRlLXJlYWN0IjsKaW1wb3J0IHsgZ2VuZXJhdGVQb2RMaW5rLCBnZW5lcmF0ZVNtc01lc3NhZ2UgfSBmcm9tICIuLi91dGlscy9wb2RVdGlscyI7CgppbnRlcmZhY2UgQ29udGFjdERldGFpbHNGb3JtUHJvcHMgewogIG9uU3VibWl0OiAoZGF0YTogQ29udGFjdEZvcm1EYXRhKSA9PiB2b2lkOwogIGpvYkRhdGE6IHsKICAgIGl0ZW1zOiBzdHJpbmc7CiAgICBhZGRyZXNzOiBzdHJpbmc7CiAgICBjb25zaWdubWVudE51bWJlcjogc3RyaW5nOwogIH07Cn0KCmV4cG9ydCBpbnRlcmZhY2UgQ29udGFjdEZvcm1EYXRhIHsKICBzZW5kZXJFbWFpbDogc3RyaW5nOwogIGRyaXZlck5hbWU6IHN0cmluZzsKICBkcml2ZXJQaG9uZTogc3RyaW5nOwp9CgpleHBvcnQgZnVuY3Rpb24gQ29udGFjdERldGFpbHNGb3JtKAogIHsgb25TdWJtaXQsIGpvYkRhdGEgfTogQ29udGFjdERldGFpbHNGb3JtUHJvcHMsCikgewogIGNvbnN0IGhhbmRsZVN1Ym1pdCA9IChlOiBSZWFjdC5Gb3JtRXZlbnQ8SFRNTEZvcm1FbGVtZW50PikgPT4gewogICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoZS5jdXJyZW50VGFyZ2V0KTsKICAgIGNvbnN0IGNvbnRhY3REYXRhID0gewogICAgICBzZW5kZXJFbWFpbDogZm9ybURhdGEuZ2V0KCJzZW5kZXJFbWFpbCIpIGFzIHN0cmluZywKICAgICAgZHJpdmVyTmFtZTogZm9ybURhdGEuZ2V0KCJkcml2ZXJOYW1lIikgYXMgc3RyaW5nLAogICAgICBkcml2ZXJQaG9uZTogZm9ybURhdGEuZ2V0KCJkcml2ZXJQaG9uZSIpIGFzIHN0cmluZywKICAgIH07CgogICAgY29uc3QgcG9kTGluayA9IGdlbmVyYXRlUG9kTGluayhqb2JEYXRhLmNvbnNpZ25tZW50TnVtYmVyKTsKICAgIGNvbnN0IHNtc01lc3NhZ2UgPSBnZW5lcmF0ZVNtc01lc3NhZ2UoCiAgICAgIGNvbnRhY3REYXRhLmRyaXZlck5hbWUsCiAgICAgIGpvYkRhdGEuaXRlbXMsCiAgICAgIGpvYkRhdGEuYWRkcmVzcywKICAgICAgcG9kTGluaywKICAgICk7CgogICAgYWxlcnQoYFNNUyBNZXNzYWdlIHRvIGJlIHNlbnQgJHtzbXNNZXNzYWdlfWApOwogICAgb25TdWJtaXQoY29udGFjdERhdGEpOwogIH07CgogIGNvbnN0IGhhbmRsZUJhY2sgPSAoKSA9PiB7CiAgICB3aW5kb3cuaGlzdG9yeS5iYWNrKCk7CiAgfTsKCiAgcmV0dXJuICgKICAgIDxkaXYgY2xhc3NOYW1lPSJtYXgtdy1tZCBteC1hdXRvIHB4LTQiPgogICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIG1iLTYiPgogICAgICAgIDxidXR0b24KICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZUJhY2t9CiAgICAgICAgICBjbGFzc05hbWU9InAtMiByb3VuZGVkLWZ1bGwgaG92ZXI6YmctZ3JheS0xMDAgdHJhbnNpdGlvbi1jb2xvcnMiCiAgICAgICAgICBhcmlhLWxhYmVsPSJHbyBiYWNrIgogICAgICAgID4KICAgICAgICAgIDxBcnJvd0xlZnQgY2xhc3NOYW1lPSJoLTUgdy01IHRleHQtZ3JheS02MDAiIC8+CiAgICAgICAgPC9idXR0b24+CiAgICAgICAgPGgyIGNsYXNzTmFtZT0idGV4dC1sZyBmb250LW1lZGl1bSB0ZXh0LWdyYXktOTAwIj5DcmVhdGUgSm9iPC9oMj4KICAgICAgICA8ZGl2IGNsYXNzTmFtZT0idy04Ij48L2Rpdj4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGNsYXNzTmFtZT0ibWItOCI+CiAgICAgICAgPGgyIGNsYXNzTmFtZT0idGV4dC0yeGwgZm9udC1zZW1pYm9sZCB0ZXh0LWJsdWUtNjAwIG1iLTIiPgogICAgICAgICAgQWRkIGNvbnRhY3QgZGV0YWlsCiAgICAgICAgPC9oMj4KICAgICAgICA8cCBjbGFzc05hbWU9InRleHQtZ3JheS02MDAgdGV4dC1zbSBsZWFkaW5nLXJlbGF4ZWQiPgogICAgICAgICAgRW50ZXIgaW4geW91ciBkcml2ZXJzIG1vYmlsZSBudW1iZXIgYW5kIHdlJ2xsIFNNUyB0aGVtIGEgbGluay4gT25jZQogICAgICAgICAgdGhlIGRlbGl2ZXJ5IGlzIGNvbXBsZXRlZCBhbmQgUE9EIGlzIGNhcHR1cmVkLCB3ZSdsbCBlbWFpbCB5b3UgdGhlCiAgICAgICAgICBjb21wbGV0ZWQgUE9ECiAgICAgICAgPC9wPgogICAgICA8L2Rpdj4KCiAgICAgIDxmb3JtIG9uU3VibWl0PXtoYW5kbGVTdWJtaXR9IGNsYXNzTmFtZT0ic3BhY2UteS02Ij4KICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ic3BhY2UteS00Ij4KICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxsYWJlbCBjbGFzc05hbWU9ImJsb2NrIHRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1ncmF5LTYwMCBtYi0xIj4KICAgICAgICAgICAgICBXaGVyZSB0aGUgUE9EIHdpbGwgYmUgZW1haWxlZAogICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICB0eXBlPSJlbWFpbCIKICAgICAgICAgICAgICBuYW1lPSJzZW5kZXJFbWFpbCIKICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iWW91ciBFbWFpbCIKICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU9Im50ckBwb2Rvd2wuY29tLmF1IgogICAgICAgICAgICAgIHJlcXVpcmVkCiAgICAgICAgICAgICAgY2xhc3NOYW1lPSJ3LWZ1bGwgcHgtNCBweS0zIHJvdW5kZWQteGwgYm9yZGVyIGJvcmRlci1ncmF5LTIwMCBmb2N1czpib3JkZXItYmx1ZS01MDAgZm9jdXM6cmluZy0xIGZvY3VzOnJpbmctYmx1ZS01MDAgdGV4dC1ncmF5LTkwMCB0ZXh0LXNtIHBsYWNlaG9sZGVyLWdyYXktNDAwIgogICAgICAgICAgICAvPgogICAgICAgICAgPC9kaXY+CgogICAgICAgICAgPGRpdiBjbGFzc05hbWU9InB0LTIiPgogICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPSJibG9jayB0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtZ3JheS02MDAgbWItMSI+CiAgICAgICAgICAgICAgU2VuZCBKb2IgbGluayB2aWEgU01TCiAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJzcGFjZS15LTQiPgogICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgICAgICAgIG5hbWU9ImRyaXZlck5hbWUiCiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iRGVsaXZlcnkgRHJpdmVyIE5hbWUiCiAgICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU9Ikphc29uIFN0YXRoYW0iCiAgICAgICAgICAgICAgICByZXF1aXJlZAogICAgICAgICAgICAgICAgY2xhc3NOYW1lPSJ3LWZ1bGwgcHgtNCBweS0zIHJvdW5kZWQteGwgYm9yZGVyIGJvcmRlci1ncmF5LTIwMCBmb2N1czpib3JkZXItYmx1ZS01MDAgZm9jdXM6cmluZy0xIGZvY3VzOnJpbmctYmx1ZS01MDAgdGV4dC1ncmF5LTkwMCB0ZXh0LXNtIHBsYWNlaG9sZGVyLWdyYXktNDAwIgogICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICB0eXBlPSJ0ZWwiCiAgICAgICAgICAgICAgICBuYW1lPSJkcml2ZXJQaG9uZSIKICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJEZWxpdmVyeSBEcml2ZXIgUGhvbmUgIyIKICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZT0iKzQ0NDQ0NDQ0NDQ0IgogICAgICAgICAgICAgICAgcmVxdWlyZWQKICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0idy1mdWxsIHB4LTQgcHktMyByb3VuZGVkLXhsIGJvcmRlciBib3JkZXItZ3JheS0yMDAgZm9jdXM6Ym9yZGVyLWJsdWUtNTAwIGZvY3VzOnJpbmctMSBmb2N1czpyaW5nLWJsdWUtNTAwIHRleHQtZ3JheS05MDAgdGV4dC1zbSBwbGFjZWhvbGRlci1ncmF5LTQwMCIKICAgICAgICAgICAgICAvPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIHRleHQtc20iPgogICAgICAgICAgPGlucHV0CiAgICAgICAgICAgIHR5cGU9ImNoZWNrYm94IgogICAgICAgICAgICBpZD0idGVybXMiCiAgICAgICAgICAgIHJlcXVpcmVkCiAgICAgICAgICAgIGNoZWNrZWQKICAgICAgICAgICAgY2xhc3NOYW1lPSJoLTUgdy01IHRleHQtYmx1ZS02MDAgcm91bmRlZCBib3JkZXItZ3JheS0zMDAgZm9jdXM6cmluZy1ibHVlLTUwMCIKICAgICAgICAgIC8+CiAgICAgICAgICA8bGFiZWwgaHRtbEZvcj0idGVybXMiIGNsYXNzTmFtZT0idGV4dC1ncmF5LTYwMCI+CiAgICAgICAgICAgIEkgQWNjZXB0IDxzcGFuIGNsYXNzTmFtZT0idGV4dC1ibHVlLTUwMCI+dGVybXMgYW5kIGNvbmRpdGlvbnM8L3NwYW4+CiAgICAgICAgICA8L2xhYmVsPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBzcGFjZS14LTQgcHQtNCI+CiAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgIHR5cGU9ImJ1dHRvbiIKICAgICAgICAgICAgb25DbGljaz17aGFuZGxlQmFja30KICAgICAgICAgICAgY2xhc3NOYW1lPSJmbGV4LTEgcHktMyBweC02IGJnLWdyYXktMTAwIHRleHQtZ3JheS01MDAgcm91bmRlZC1mdWxsIGZvbnQtbWVkaXVtIGhvdmVyOmJnLWdyYXktMjAwIHRyYW5zaXRpb24tY29sb3JzIgogICAgICAgICAgPgogICAgICAgICAgICBCYWNrCiAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgIDxidXR0b24KICAgICAgICAgICAgdHlwZT0ic3VibWl0IgogICAgICAgICAgICBjbGFzc05hbWU9ImZsZXgtMSBweS0zIHB4LTYgYmctWyMwMEJDRDRdIHRleHQtd2hpdGUgcm91bmRlZC1mdWxsIGZvbnQtbWVkaXVtIGhvdmVyOmJnLVsjMDBBQ0MxXSB0cmFuc2l0aW9uLWNvbG9ycyBzaGFkb3ctbGciCiAgICAgICAgICA+CiAgICAgICAgICAgIENyZWF0ZQogICAgICAgICAgPC9idXR0b24+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZm9ybT4KICAgIDwvZGl2PgogICk7Cn0KAAAAAAAAAADhEgAAAAAAAAAAAAAAAAAAAAAAAOESAAAAAAAAAAAAAAAAAAAAAAAA4RIAAAAAAAAAAAAAAAAAAAAAAADhEgAAAAAAAAAAAAAAAAAAAAAAAOESAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdBQAAAAAAAF0FAAAAAAAAAAAAAABAg0A"
				]
			]
		},
		{
			"file": "api/src/flow.ts",
			"settings":
			{
				"buffer_size": 919,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					34,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"vi_eval",
								{
									"action_args":
									{
										"insert_command": "vi_delete"
									},
									"action_command": "enter_insert_mode",
									"motion_args":
									{
										"extend": true,
										"forward": true,
										"visual": false
									},
									"motion_clip_to_line": false,
									"motion_command": "vi_move_by_characters_in_line",
									"motion_inclusive": false,
									"motion_mode": 0
								}
							],
							[
								"insert",
								{
									"characters": "l"
								}
							],
							[
								"left_delete",
								null
							],
							[
								"exit_insert_mode",
								null
							]
						]
					},
					"AwAAAHYCAAAAAAAAdgIAAAAAAAABAAAAcHYCAAAAAAAAdwIAAAAAAAAAAAAAdgIAAAAAAAB2AgAAAAAAAAEAAABs",
					"AQAAAAAAAAABAAAAdgIAAAAAAAB2AgAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"vi_eval",
					{
						"action_args":
						{
							"insert_command": "vi_delete"
						},
						"action_command": "enter_insert_mode",
						"motion_args": null,
						"motion_clip_to_line": false,
						"motion_command": null,
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AQAAAHYCAAAAAAAAdgIAAAAAAAAJAAAAaW5vdCBncmlz",
					"AQAAAAAAAAABAAAAdgIAAAAAAAB/AgAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "warm"
					},
					"BAAAAHYCAAAAAAAAdwIAAAAAAAAAAAAAdwIAAAAAAAB4AgAAAAAAAAAAAAB4AgAAAAAAAHkCAAAAAAAAAAAAAHkCAAAAAAAAegIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgIAAAAAAAB2AgAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " tea"
					},
					"BAAAAHoCAAAAAAAAewIAAAAAAAAAAAAAewIAAAAAAAB8AgAAAAAAAAAAAAB8AgAAAAAAAH0CAAAAAAAAAAAAAH0CAAAAAAAAfgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegIAAAAAAAB6AgAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"vi_eval",
								{
									"action_args":
									{
										"insert_command": "vi_delete"
									},
									"action_command": "enter_insert_mode",
									"motion_args":
									{
										"repeat": 1
									},
									"motion_clip_to_line": true,
									"motion_command": "vi_extend_to_end_of_whitespace_or_word",
									"motion_inclusive": true,
									"motion_mode": 0
								}
							],
							[
								"exit_insert_mode",
								null
							]
						]
					},
					"AQAAAIwCAAAAAAAAjAIAAAAAAAAHAAAAc2lsZW5jZQ",
					"AQAAAAAAAAABAAAAjAIAAAAAAACMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Line.sublime-macro"
					},
					"AQAAAIICAAAAAAAAggIAAAAAAAAOAAAAICAgIGl0ZW0oJycpLAo",
					"AQAAAAAAAAABAAAAiwIAAAAAAACLAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "api/src/sms.ts",
			"settings":
			{
				"buffer_size": 1172,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "client/src/utils/podUtils.ts",
			"settings":
			{
				"buffer_size": 382,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					""
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Automatic"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Run"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Run (with args)..."
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Check"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Test"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Test (with args)..."
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Bench"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Clean"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Document"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Clippy"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Script"
				]
			],
			[
				"Packages/Rust Enhanced/RustEnhanced.sublime-build",
				"Run"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"diagno",
				"SublimeLinter: Open diagnostics panel"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"lsp",
				"LSP: Toggle Log Panel"
			],
			[
				"lint",
				"SublimeLinter: Lint This View"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"c",
				"Copilot: Chat"
			],
			[
				"copi",
				"Preferences: LSP-copilot Settings"
			],
			[
				"ena",
				"Package Control: Enable Package"
			],
			[
				"diagnosti",
				"SublimeLinter: Open diagnostics panel"
			],
			[
				"add folder",
				"Project: Add Folder"
			],
			[
				"sideb",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"enable lan",
				"LSP: Enable Language Server in Project"
			],
			[
				"lang",
				"LSP: Enable Language Server in Project"
			],
			[
				"copilot",
				"Preferences: LSP-copilot Settings"
			],
			[
				"enab",
				"Package Control: Enable Package"
			],
			[
				"lsp key",
				"Preferences: LSP Key Bindings"
			],
			[
				"type",
				"Set Syntax: TypeScript"
			],
			[
				"deno",
				"Preferences: LSP-Deno Settings"
			],
			[
				"pretty",
				"Pretty JSON: Format JSON"
			],
			[
				"ts",
				"Set Syntax: TypeScript"
			],
			[
				"java",
				"Set Syntax: JavaScript"
			],
			[
				"sql",
				"Set Syntax: SQL"
			],
			[
				"yaml",
				"Set Syntax: YAML"
			],
			[
				"reind",
				"Indentation: Reindent Lines"
			],
			[
				"rein",
				"Indentation: Reindent Lines"
			],
			[
				"jsx",
				"Set Syntax: JSX"
			],
			[
				"log",
				"Git: Log Current File"
			],
			[
				"diff",
				"Git: Diff Current File"
			],
			[
				"pris",
				"Set Syntax: Prisma"
			],
			[
				"blame",
				"Git: Blame"
			],
			[
				"ja",
				"Set Syntax: JavaScript"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"format",
				"ESLint Formatter: Format this file"
			],
			[
				"eslint",
				"Preferences: SublimeLinter Settings"
			],
			[
				"blam",
				"Git: Blame"
			],
			[
				"git diff",
				"Git: Diff Current File"
			],
			[
				"git show",
				"Git: Show Commit By Hash"
			],
			[
				"ngin",
				"Set Syntax: nginx"
			],
			[
				"git log",
				"Git: Log Current File"
			],
			[
				"dockerfil",
				"Set Syntax: Dockerfile"
			],
			[
				"syn bash",
				"Set Syntax: Bourne Again Shell (bash)"
			],
			[
				"change",
				"Changelog"
			],
			[
				"ui",
				"UI: Select Color Scheme"
			],
			[
				"synt rust",
				"Set Syntax: Rust Enhanced"
			],
			[
				"toml",
				"Set Syntax: TOML"
			],
			[
				"lsp ena",
				"LSP: Enable Language Server in Project"
			],
			[
				"color",
				"UI: Select Color Scheme"
			],
			[
				"theme",
				"UI: Select Color Scheme"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 955.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/ntr/code/podowl",
		"/C/Users/ntr/code/podowl/api",
		"/C/Users/ntr/code/podowl/api/src"
	],
	"file_history":
	[
		"/C/Users/ntr/code/podowl/api/src/sms.ts",
		"/C/Users/ntr/code/podowl/deno.jsonc",
		"/C/Users/ntr/code/podowl/client/src/App.tsx",
		"/C/Users/ntr/code/podowl/client/src/utils/jobStore.ts",
		"/C/Users/ntr/code/podowl/api/types.ts",
		"/C/Users/ntr/code/podowl/client/eslint.config.js",
		"/C/Users/ntr/code/podowl/api/fns/flow.ts",
		"/home/ntr/code/podowl/client/eslint.config.js",
		"/home/ntr/code/podowl/deno.jsonc",
		"/home/ntr/code/podowl/api/fns/flow.ts",
		"/home/ntr/code/podowl/client/src/components/JobCreationForm.tsx",
		"/home/ntr/code/podowl/global.d.ts",
		"/home/ntr/code/podowl/api/fns/sms.ts",
		"/home/ntr/code/podowl/client/src/utils/podUtils.ts",
		"/home/ntr/code/podowl/client/src/components/JobDetails.tsx",
		"/home/ntr/code/podowl/api/deno.jsonc",
		"/home/ntr/code/podowl/client/src/utils/jobStore.ts",
		"/home/ntr/code/podowl/client/src/App.tsx",
		"/home/ntr/code/podowl/podowl.sublime-project",
		"/home/ntr/code/podowl/client/src/components/ContactDetailsForm.tsx",
		"/home/ntr/code/podowl/client/package.json",
		"/home/ntr/code/podowl/api/supabase/functions/podowl-sms/index.ts",
		"/home/ntr/code/podowl/api/deno.json",
		"/home/ntr/code/podowl/api/src/sms.ts",
		"/home/ntr/code/podowl/api/supabase/functions/podowl-sms/source.ts",
		"/home/ntr/mcrates/api/src/pg.ts",
		"/home/ntr/mcrates/api/src/discogs.ts",
		"/home/ntr/mcrates/docker-compose.K8S.yaml",
		"/home/ntr/mcrates/api/package.json",
		"/home/ntr/mcrates/api/src/services.ts",
		"/home/ntr/mcrates/api/prisma/schema.prisma",
		"/home/ntr/mcrates/api/src/events.ts",
		"/home/ntr/mcrates/.env",
		"/home/ntr/mcrates/api/.env",
		"/home/ntr/mcrates/docker-compose.yaml",
		"/home/ntr/mcrates/api/api.Dockerfile",
		"/home/ntr/mcrates/client/src/app.tsx",
		"/home/ntr/mcrates/client/src/components/offer.tsx",
		"/home/ntr/mcrates/client/src/routes/main.tsx",
		"/home/ntr/.config/redshift.conf",
		"/home/ntr/mcrates/docker-compose.MCRATES.yaml",
		"/home/ntr/mcrates/client/client.nginx.conf",
		"/home/ntr/mcrates/api/src/api.ts",
		"/home/ntr/mcrates/client/src/routes/search.tsx",
		"/home/ntr/Downloads/git.mnml.gg-zone.txt",
		"/home/ntr/Downloads/mnml.gg-zone.txt",
		"/home/ntr/mcrates/api/src/discord.ts",
		"/home/ntr/mcrates/client/client.Dockerfile",
		"/home/ntr/mcrates/nginx/matescrates.au.nginx.conf",
		"/home/ntr/mcrates/client/src/http.ts",
		"/home/ntr/mcrates/.gitignore",
		"/home/ntr/mcrates/api/src/routers/router.auth.ts",
		"/home/ntr/mcrates/api/tsconfig.json",
		"/home/ntr/mcrates/api/src/log.ts",
		"/home/ntr/mcrates/api/src/rpc.ts",
		"/home/ntr/mcrates/client/.eslintrc.js",
		"/home/ntr/Dropbox/.sketch/yep.txt",
		"/home/ntr/stable-diffusion-webui/extensions/Umi-AI/wildcards/Landscapes.txt",
		"/home/ntr/code/dbased/docker-compose.yml",
		"/home/ntr/etc/surf.txt",
		"/home/ntr/Dropbox/etc/surf.txt",
		"/home/ntr/Downloads/appointment.ics",
		"/home/ntr/mcrates/client/tsconfig.json",
		"/home/ntr/mcrates/client/src/routes/info.tsx",
		"/home/ntr/mcrates/api/.mocharc.json",
		"/home/ntr/mcrates/client/src/style/index.less",
		"/home/ntr/mcrates/client/src/style/styles.less",
		"/home/ntr/Dropbox/.sketch/sd.txt",
		"/home/ntr/.xmonad/xmonad.hs",
		"/home/ntr/mcrates/api/src/api.test.ts",
		"/home/ntr/forage/JIRA.csv",
		"/home/ntr/mcrates/api/prisma/migrations/20221226110634_initial_migration/migration.sql",
		"/home/ntr/mcrates/api/index.ts",
		"/home/ntr/mcrates/api/src/offers.ts",
		"/home/ntr/mcrates/TODO.md",
		"/home/ntr/mcrates/client/src/toast.tsx",
		"/home/ntr/mcrates/client/src/ws.ts",
		"/home/ntr/mcrates/api/src/utils.ts",
		"/home/ntr/mcrates/api/src/mocha.setup.ts",
		"/home/ntr/.ssh/config",
		"/home/ntr/mcrates/client/src/style/fonts.less",
		"/home/ntr/mcrates/client/src/routes/acp.tsx",
		"/home/ntr/mcrates/client/package.json",
		"/home/ntr/mcrates/client/src/components/offer.group.tsx",
		"/home/ntr/Downloads/bulk-add-Interns (6) (2).csv",
		"/home/ntr/mcrates/client/src/components/nav.tsx",
		"/home/ntr/mcrates/client/src/routes/list.tsx",
		"/home/ntr/mcrates/client/src/components/want.tsx",
		"/home/ntr/mcrates/api/src/notify.ts",
		"/home/ntr/mcrates/client/src/routes/offers.tsx",
		"/home/ntr/mcrates/api/src/listen.notify.ts",
		"/home/ntr/mcrates/api/prisma/migrations/20221226113955_notify/migration.sql",
		"/home/ntr/mcrates/client/src/actions.ts",
		"/home/ntr/mcrates/client/src/routes/login.tsx",
		"/home/ntr/mcrates/client/src/index.ts",
		"/home/ntr/mcrates/client/src/template.html",
		"/home/ntr/Downloads/bulk-add-Interns (1).csv",
		"/home/ntr/mcrates/api/global.d.ts",
		"/home/ntr/Dropbox/business/tfn-abn-super.txt",
		"/home/ntr/mcrates/client/src/components/swirl.tsx",
		"/home/ntr/.aliases",
		"/home/ntr/mcrates/client/src/store.tsx",
		"/home/ntr/mcrates/client/src/assets/swirl.bare.svg",
		"/home/ntr/mcrates/client/src/assets/swirl.svg",
		"/home/ntr/mcrates/client/src/components/header.tsx",
		"/home/ntr/mcrates/client/src/routes/home.tsx",
		"/home/ntr/mcrates/nginx/localhost.nginx.conf",
		"/home/ntr/mcrates/docker-compose.TEST.yaml",
		"/home/ntr/mcrates/etc/matescrates.au.nginx.conf",
		"/home/ntr/mcrates/client/src/routes/bundles.tsx",
		"/home/ntr/mcrates/client/src/components/bundle.tsx",
		"/home/ntr/mcrates/client/src/components/acp.offer.tsx",
		"/home/ntr/mcrates/api/node_modules/.prisma/client/index.d.ts",
		"/home/ntr/mcrates/client/disclaimers.txt",
		"/home/ntr/mcrates/client/src/routes/register.tsx",
		"/home/ntr/mcrates/api/src/auth.passport.ts",
		"/home/ntr/mcrates/api/docker-compose.yaml",
		"/home/ntr/mcrates/docker-compose.test.yaml",
		"/home/ntr/mcrates/server/prisma/schema.prisma",
		"/home/ntr/mcrates/server/src/api.test.ts",
		"/home/ntr/mcrates/server/docker-compose.test.yaml",
		"/home/ntr/mcrates/server/src/api.ts",
		"/home/ntr/mcrates/server/src/routers/router.auth.ts",
		"/home/ntr/mcrates/server/src/pg.ts",
		"/home/ntr/mcrates/server/src/discogs.ts",
		"/home/ntr/mcrates/server/docker-compose.yaml",
		"/home/ntr/mcrates/server/.env",
		"/home/ntr/mcrates/server/package.json"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 152.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"client",
			"9999999999",
			"destination",
			"consignmentNumber",
			": ",
			"strix",
			"stri",
			"61433034004",
			"433034",
			"setjob",
			"saveJob",
			"contact",
			"generateSmsMessage",
			"generatePodLink",
			"jobData",
			"contactData",
			"smsMessage",
			"jobData",
			"sms",
			"value=",
			"create",
			"setSignature",
			"completed",
			"value=",
			"JobCreationForm",
			"handleJobCreation",
			"JobCreationForm",
			"Address",
			"indent",
			"lint",
			"spaces",
			"where the pod",
			"sender name",
			"phone",
			"twilio"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"defaultValue="
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "client/src/components/ContactDetailsForm.tsx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4833,
						"regions":
						{
						},
						"selection":
						[
							[
								1372,
								1372
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".\"'`/@<#",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "Deno"
								}
							],
							"copilot.completion._is_modified": false,
							"copilot.completion._is_saving": false,
							"copilot.completion.completion_index": 0,
							"copilot.completion.completion_style": "popup",
							"copilot.completion.completions":
							[
								{
									"displayText": ");",
									"docVersion": 56,
									"point": 1112,
									"position":
									{
										"character": 48,
										"line": 39
									},
									"range":
									{
										"end":
										{
											"character": 50,
											"line": 39
										},
										"start":
										{
											"character": 0,
											"line": 39
										}
									},
									"region":
									[
										1064,
										1114
									],
									"text": "    alert(`SMS Message to be sent ${smsMessage}`);",
									"uuid": "24c847f4-a5cc-4b05-9a3b-f62990b07ec4"
								}
							],
							"copilot.completion.is_visible": false,
							"copilot.completion.is_waiting_completion": false,
							"lsp_active": true,
							"lsp_uri": "file:///home/ntr/code/podowl/client/src/components/ContactDetailsForm.tsx",
							"show_definitions": false,
							"syntax": "Packages/JavaScript/TSX.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1184.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "api/src/flow.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 919,
						"regions":
						{
						},
						"selection":
						[
							[
								642,
								642
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".\"'`/@<#",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "Deno"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/Users/ntr/code/podowl/api/src/flow.ts",
							"show_definitions": false,
							"syntax": "Packages/JavaScript/TypeScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 348.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "api/src/sms.ts",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1172,
						"regions":
						{
						},
						"selection":
						[
							[
								181,
								185
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".\"'`/@<#",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "Deno"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/Users/ntr/code/podowl/api/src/sms.ts",
							"show_definitions": false,
							"syntax": "Packages/JavaScript/TypeScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "client/src/utils/podUtils.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 382,
						"regions":
						{
						},
						"selection":
						[
							[
								311,
								311
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".\"'`/@<#",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "Deno"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/Users/ntr/code/podowl/client/src/utils/podUtils.ts",
							"show_definitions": false,
							"syntax": "Packages/JavaScript/TypeScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 38.0
	},
	"input":
	{
		"height": 68.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.LSP Log Panel":
	{
		"height": 1048.0
	},
	"output.SublimeLinter":
	{
		"height": 186.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 522.0
	},
	"output.diagnostics":
	{
		"height": 388.0
	},
	"output.doc":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 1167.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 186.0
	},
	"output.language servers":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.mdpopups-dummy":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "podowl.sublime-project",
	"replace":
	{
		"height": 72.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"utils",
				"client\\src\\utils\\podUtils.ts"
			],
			[
				"flow",
				"api\\src\\flow.ts"
			],
			[
				"eslint",
				"client/eslint.config.js"
			],
			[
				"sms",
				"api/fns/sms.ts"
			],
			[
				"jobstore",
				"client/src/utils/jobStore.ts"
			],
			[
				"app",
				"client/src/App.tsx"
			],
			[
				"podutil",
				"client/src/utils/podUtils.ts"
			],
			[
				"deno",
				"api/deno.jsonc"
			],
			[
				"jobcrea",
				"client/src/components/JobCreationForm.tsx"
			],
			[
				"jobso",
				"client/src/utils/jobStore.ts"
			],
			[
				"clientpack",
				"client/package.json"
			],
			[
				"deno.",
				"api/deno.jsonc"
			],
			[
				"inde",
				"api/supabase/functions/podowl-sms/index.ts"
			],
			[
				"index",
				"api/supabase/functions/podowl-sms/index.ts"
			],
			[
				"index.t",
				"api/supabase/functions/podowl-sms/index.ts"
			],
			[
				"prism",
				"api/prisma/schema.prisma"
			],
			[
				"servic",
				"api/src/services.ts"
			],
			[
				"pg",
				"api/src/pg.ts"
			],
			[
				".env",
				".env"
			],
			[
				"di",
				"api/src/discogs.ts"
			],
			[
				"offer",
				"client/src/components/offer.tsx"
			],
			[
				"compose",
				"docker-compose.yaml"
			],
			[
				"disco",
				"api/src/discogs.ts"
			],
			[
				".en",
				".env"
			],
			[
				"pack",
				"api/package.json"
			],
			[
				"dockerfile",
				"api/api.Dockerfile"
			],
			[
				"event",
				"api/src/events.ts"
			],
			[
				"schem",
				"api/prisma/schema.prisma"
			],
			[
				"dis",
				"api/src/discogs.ts"
			],
			[
				"serv",
				"api/src/services.ts"
			],
			[
				"sche",
				"api/prisma/schema.prisma"
			],
			[
				"package",
				"api/package.json"
			],
			[
				"compo",
				"docker-compose.yaml"
			],
			[
				"client.ngin",
				"client/client.nginx.conf"
			],
			[
				"events",
				"api/src/events.ts"
			],
			[
				"nginx",
				"nginx/matescrates.au.nginx.conf"
			],
			[
				"api.te",
				"api/src/api.test.ts"
			],
			[
				"api.t",
				"api/src/api.ts"
			],
			[
				"api",
				"api/src/api.ts"
			],
			[
				"docker",
				"api/api.Dockerfile"
			],
			[
				"ngin",
				"client/client.nginx.conf"
			],
			[
				"router",
				"api/src/routers/router.auth.ts"
			],
			[
				"http",
				"client/src/http.ts"
			],
			[
				"packa",
				"api/package.json"
			],
			[
				"k8s",
				"docker-compose.K8S.yaml"
			],
			[
				"com",
				"docker-compose.MCRATES.yaml"
			],
			[
				"mc",
				"docker-compose.MCRATES.yaml"
			],
			[
				"client.doc",
				"client/client.Dockerfile"
			],
			[
				"mcr",
				"docker-compose.MCRATES.yaml"
			],
			[
				"log",
				"api/src/log.ts"
			],
			[
				"tsconfig",
				"api/tsconfig.json"
			],
			[
				"tsc",
				"api/tsconfig.json"
			],
			[
				"rpc",
				"api/src/rpc.ts"
			],
			[
				"gi",
				".gitignore"
			],
			[
				"tscon",
				"api/tsconfig.json"
			],
			[
				"style",
				"client/src/style/styles.less"
			],
			[
				"json",
				"api/.mocharc.json"
			],
			[
				"ser",
				"api/src/services.ts"
			],
			[
				"apite",
				"api/src/api.test.ts"
			],
			[
				"auth",
				"api/src/routers/router.auth.ts"
			],
			[
				"sql",
				"api/prisma/migrations/20221226110634_initial_migration/migration.sql"
			],
			[
				"eve",
				"api/src/events.ts"
			],
			[
				"discogs",
				"api/src/discogs.ts"
			],
			[
				"discog",
				"api/src/discogs.ts"
			],
			[
				"even",
				"api/src/events.ts"
			],
			[
				"env",
				".env"
			],
			[
				"info",
				"client/src/routes/info.tsx"
			],
			[
				"rout",
				"api/src/routers/router.auth.ts"
			],
			[
				"d",
				"docker-compose.yaml"
			],
			[
				".e",
				".env"
			],
			[
				"ind",
				"api/index.ts"
			],
			[
				"disc",
				"api/src/discord.ts"
			],
			[
				"todo",
				"TODO.md"
			],
			[
				"toast",
				"client/src/toast.tsx"
			],
			[
				"ws",
				"client/src/ws.ts"
			],
			[
				"index.le",
				"client/src/style/index.less"
			],
			[
				"sty",
				"client/src/style/styles.less"
			],
			[
				"search",
				"client/src/routes/search.tsx"
			],
			[
				"mocha",
				"api/src/mocha.setup.ts"
			],
			[
				"test",
				"api/src/api.test.ts"
			],
			[
				".gi",
				".gitignore"
			],
			[
				"st",
				"client/src/style/styles.less"
			],
			[
				"comp",
				"docker-compose.yaml"
			],
			[
				"acp",
				"client/src/routes/acp.tsx"
			],
			[
				"font",
				"client/src/style/fonts.less"
			],
			[
				"styl",
				"client/src/style/index.less"
			],
			[
				"offergrou",
				"client/src/components/offer.group.tsx"
			],
			[
				"servi",
				"api/src/services.ts"
			],
			[
				"nav",
				"client/src/components/nav.tsx"
			],
			[
				"main",
				"client/src/routes/main.tsx"
			],
			[
				"want",
				"client/src/components/want.tsx"
			],
			[
				"list",
				"client/src/routes/list.tsx"
			],
			[
				"index.l",
				"client/src/style/index.less"
			],
			[
				"styles",
				"client/src/style/styles.less"
			],
			[
				"offerg",
				"client/src/components/offer.group.tsx"
			],
			[
				"offers",
				"client/src/routes/offers.tsx"
			],
			[
				"off",
				"api/src/offers.ts"
			],
			[
				"index.ls",
				"client/src/style/index.less"
			],
			[
				"no",
				"api/src/notify.ts"
			],
			[
				"toas",
				"client/src/toast.tsx"
			],
			[
				"noti",
				"api/src/notify.ts"
			],
			[
				"nofi",
				"api/src/notify.ts"
			],
			[
				"notifymi",
				"api/prisma/migrations/20221226113955_notify/migration.sql"
			],
			[
				"listen",
				"api/src/listen.notify.ts"
			],
			[
				"ap",
				"api/src/api.ts"
			],
			[
				"service",
				"api/src/services.ts"
			],
			[
				"pri",
				"api/prisma/schema.prisma"
			],
			[
				"offergroup",
				"client/src/components/offer.group.tsx"
			],
			[
				"scha",
				"api/prisma/schema.prisma"
			],
			[
				"temp",
				"client/src/template.html"
			],
			[
				"login",
				"client/src/routes/login.tsx"
			],
			[
				"sch",
				"api/prisma/schema.prisma"
			],
			[
				"ev",
				"api/src/events.ts"
			],
			[
				"pris",
				"api/prisma/schema.prisma"
			],
			[
				"of",
				"api/src/offers.ts"
			],
			[
				"htt",
				"client/src/http.ts"
			],
			[
				"sear",
				"client/src/routes/search.tsx"
			],
			[
				"offegro",
				"client/src/components/offer.group.tsx"
			],
			[
				"swi",
				"~/mcrates/client/src/assets/swirl.bare.svg"
			],
			[
				"less",
				"client/src/style/index.less"
			],
			[
				"in",
				"client/src/style/index.less"
			],
			[
				"store",
				"client/src/store.tsx"
			],
			[
				"offe",
				"client/src/components/offer.tsx"
			],
			[
				"logi",
				"client/src/routes/login.tsx"
			],
			[
				"hea",
				"client/src/components/header.tsx"
			],
			[
				"sea",
				"client/src/routes/search.tsx"
			],
			[
				"head",
				"client/src/components/header.tsx"
			],
			[
				"he",
				"client/src/components/header.tsx"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 496.0,
		"last_filter": "pod",
		"selected_items":
		[
			[
				"pod",
				"~/code/podowl/podowl.sublime-project"
			],
			[
				"stri",
				"~/code/sl-projects/strix.sublime-project"
			],
			[
				"mem",
				"~/memestream/memestream.sublime-project"
			],
			[
				"strix",
				"~/code/sl-projects/strix.sublime-project"
			],
			[
				"meme",
				"~/memestream/memestream.sublime-project"
			],
			[
				"",
				"~/code/sl-projects/forage.sublime-project"
			],
			[
				"sear",
				"~/code/sl-projects/search.sublime-project"
			],
			[
				"mn",
				"~/code/sl-projects/mnml.sublime-project"
			],
			[
				"mnm",
				"~/code/sl-projects/mnml.sublime-project"
			],
			[
				"j",
				"~/code/sl-projects/forage.sublime-project"
			],
			[
				"mbn",
				"~/code/sl-projects/mnml.sublime-project"
			],
			[
				"m",
				"~/code/sl-projects/mnml.sublime-project"
			],
			[
				"sy",
				"~/code/sl-projects/synth.sublime-project"
			],
			[
				"syn",
				"~/code/sl-projects/synth.sublime-project"
			]
		],
		"width": 376.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"copilot.conversation.code_block_index":
		{
			"0": "{\n  \"include\": [\"api/**/*\"]\n}\n",
			"1": "document.getElementById('jobForm').addEventListener('submit', async (event) => {\n  event.preventDefault();\n\n  const jobDetails = {\n    title: document.getElementById('jobTitle').value,\n    description: document.getElementById('jobDescription').value,\n    // Add other job details as needed\n  };\n\n  try {\n    const response = await fetch('https://your-deployed-api-url.com/sms', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(jobDetails),\n    });\n\n    if (response.ok) {\n      const result = await response.json();\n      console.log('Job submitted successfully:', result);\n    } else {\n      console.error('Failed to submit job:', response.statusText);\n    }\n  } catch (error) {\n    console.error('Error submitting job:', error);\n  }\n});\n"
		},
		"copilot.conversation.conversation_entries":
		[
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "ntr-808",
				"references":
				[
				],
				"reply": "update the deno config to only enable deno within the api folder",
				"turnId": "b892eabf-12ae-48ba-b0c2-4c6968485b04",
				"warnings":
				[
				]
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "To update the Deno configuration to only enable Deno within the `api` folder, you can create a `deno.json` configuration file in the root of your project and specify the `include` option to only include the `api` folder.\n\n",
				"turnId": "7d3736f9-d14a-4503-9230-9a05405f2a45"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "Here is an example of how you can configure this:\n\n",
				"turnId": "7d3736f9-d14a-4503-9230-9a05405f2a45"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "```json\n",
				"turnId": "7d3736f9-d14a-4503-9230-9a05405f2a45"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "{\n",
				"turnId": "7d3736f9-d14a-4503-9230-9a05405f2a45"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "  \"include\": [\"api/**/*\"]\n",
				"turnId": "7d3736f9-d14a-4503-9230-9a05405f2a45"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "}\n",
				"turnId": "7d3736f9-d14a-4503-9230-9a05405f2a45"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "```\n\n",
				"turnId": "7d3736f9-d14a-4503-9230-9a05405f2a45"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "This configuration ensures that Deno is only enabled for files within the `api` folder and its subdirectories.",
				"turnId": "7d3736f9-d14a-4503-9230-9a05405f2a45"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "ntr-808",
				"references":
				[
				],
				"reply": "when submitting the job form, make a post request with the job details to the deployed url of the api sms function",
				"turnId": "b0d5a698-dd6d-4cc1-b4ba-0d559e1c57a5",
				"warnings":
				[
				]
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "To make a POST request with the job details to the deployed URL of the API SMS function when submitting the job form, you can use the `fetch` API in JavaScript. Here is an example of how you can achieve this:\n\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "```javascript\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "document.getElementById('jobForm').addEventListener('submit', async (event) => {\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "  event.preventDefault();\n\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "  const jobDetails = {\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "    title: document.getElementById('jobTitle').value,\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "    description: document.getElementById('jobDescription').value,\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "    // Add other job details as needed\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "  };\n\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "  try {\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "    const response = await fetch('https://your-deployed-api-url.com/sms', {\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "      method: 'POST',\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "      headers: {\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "        'Content-Type': 'application/json',\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "      },\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "      body: JSON.stringify(jobDetails),\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "    });\n\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "    if (response.ok) {\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "      const result = await response.json();\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "      console.log('Job submitted successfully:', result);\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "    } else {\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "      console.error('Failed to submit job:', response.statusText);\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "    }\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "  } catch (error) {\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "    console.error('Error submitting job:', error);\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "  }\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "});\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "```\n\n",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			},
			{
				"annotations":
				[
				],
				"conversationId": "9a0e20bc-e9ee-4d20-b025-03d169151054",
				"hideText": false,
				"kind": "report",
				"notifications":
				[
				],
				"references":
				[
				],
				"reply": "This code listens for the form submission, prevents the default form submission behavior, gathers the job details from the form inputs, and sends a POST request to the specified API URL with the job details in the request body.",
				"turnId": "7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5"
			}
		],
		"copilot.conversation.conversation_id": "9a0e20bc-e9ee-4d20-b025-03d169151054",
		"copilot.conversation.follow_up": "How can I handle errors when the API request fails?",
		"copilot.conversation.is_visible": false,
		"copilot.conversation.is_waiting_conversation": false,
		"copilot.conversation.last_active_view_id": 189,
		"copilot.conversation.original_layout": null,
		"copilot.conversation.reference_block_state":
		{
			"7bcc4959-df2f-45eb-8a7a-2e3fa514b1c5": false,
			"7d3736f9-d14a-4503-9230-9a05405f2a45": false,
			"b0d5a698-dd6d-4cc1-b4ba-0d559e1c57a5": false,
			"b892eabf-12ae-48ba-b0c2-4c6968485b04": false
		},
		"copilot.conversation.suggested_title": "Configuring API Requests in Deno",
		"copilot.conversation.view_group_id": 1,
		"copilot.conversation.view_id": 358,
		"lsp_show_inlay_hints": false
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 324.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
